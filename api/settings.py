"""
Django settings for api project.

Generated by 'django-admin startproject' using Django 1.9.1.

For more information on this file, see
https://docs.djangoproject.com/en/1.9/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.9/ref/settings/
"""

import os

# API application version (not django or libs)
API_VERSION = "1.0.1"

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.9/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '6x#-ojonfomsw29m2015*r(_*lj27ijg_wl8#r(4tl29(xi&js'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['127.0.0.1']

# Application definition

INSTALLED_APPS = [

    # CORE
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',

    # VENDOR
    'django_extensions',
    'storages',

    # OAUTH2 Toolkit
    'oauth2_provider',

    # REST Framework
    'rest_framework',
    'corsheaders',

]

AUTHENTICATION_BACKENDS = (
    'oauth2_provider.backends.OAuth2Backend',
    # Uncomment following if you want to access the admin
    'django.contrib.auth.backends.ModelBackend',

)

MIDDLEWARE_CLASSES = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.auth.middleware.SessionAuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',

    # VENDOR

    # OAUTH2
    'oauth2_provider.middleware.OAuth2TokenMiddleware',

    # CORS
    'corsheaders.middleware.CorsMiddleware',
]

OAUTH2_PROVIDER = {
    # this is the list of available scopes
    'SCOPES': {
        'read': 'Read scope',
        'write': 'Write scope',
        'groups': 'Access to your groups'
    }
}

REST_FRAMEWORK = {

    'DEFAULT_RENDERER_CLASSES': [
        'rest_framework.renderers.JSONRenderer',
    ],

    # Use Django's standard `django.contrib.auth` permissions,
    # or allow read-only access for unauthenticated users.
    'DEFAULT_PERMISSION_CLASSES': [

        # General API only - public have read no writes
        # 'rest_framework.permissions.DjangoModelPermissionsOrAnonadOnly',

        # OAUTH2 Provider USER API / have to be authenticated
        'rest_framework.permissions.IsAuthenticated',

    ],

    'DEFAULT_AUTHENTICATION_CLASSES': (

        # DOT
        'oauth2_provider.ext.rest_framework.OAuth2Authentication',

    ),

    # Global pagination (http://www.django-rest-framework.org/api-guide/pagination/)
    'DEFAULT_PAGINATION_CLASS': 'rest_framework.pagination.PageNumberPagination',
    'PAGE_SIZE': 5
}

ROOT_URLCONF = 'api.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'api.wsgi.application'

# Database
# https://docs.djangoproject.com/en/1.9/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
    }

    # 'default': {
    #     'ENGINE': 'django.db.backends.mysql',
    #     'NAME': os.environ.get('DRF_DATABASE_NAME', ''),
    #     'USER': os.environ.get('DRF_DATABASE_USER', ''),
    #     'PASSWORD': os.environ.get('DRF_DATABASE_PASSWORD', ''),
    #     'HOST': os.environ.get('DRF_DATABASE_HOST', ''),
    #     'PORT': os.environ.get('DRF_DATABASE_PORT', ''),
    # }

}

# Password validation
# https://docs.djangoproject.com/en/1.9/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Internationalization
# https://docs.djangoproject.com/en/1.9/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True

# CORS
CORS_ORIGIN_ALLOW_ALL = True

AWS_ACCESS_KEY_ID = os.environ.get('DRF_AWS_ACCESS_KEY')
AWS_SECRET_ACCESS_KEY = os.environ.get('DRF_AWS_SECRET_KEY')
AWS_STORAGE_BUCKET_NAME = os.environ.get('DRF_AWS_S3_BUCKET')

AWS_S3_CUSTOM_DOMAIN = "s3-eu-west-1.amazonaws.com/%s" % AWS_STORAGE_BUCKET_NAME

# Fixes issue with calling format (can be OrdinaryCallingFormat as well)
AWS_S3_CALLING_FORMAT = 'boto.s3.connection.OrdinaryCallingFormat'

# Fixes issue with region hosting
from boto.s3.connection import S3Connection

S3Connection.DefaultHost = 's3-eu-west-1.amazonaws.com'
AWS_S3_HOST = 's3-eu-west-1.amazonaws.com'

# STATIC Files
STATICFILES_LOCATION = 'static'
STATICFILES_STORAGE = 'custom_storages.StaticStorage'
STATIC_URL = "https://%s/%s/" % (AWS_S3_CUSTOM_DOMAIN, STATICFILES_LOCATION)

# MEDIA Files
MEDIAFILES_LOCATION = 'media'
MEDIA_URL = "https://%s/%s/" % (AWS_S3_CUSTOM_DOMAIN, MEDIAFILES_LOCATION)
DEFAULT_FILE_STORAGE = 'custom_storages.MediaStorage'

# User flows
LOGIN_URL = 'accounts/login/'
LOGIN_REDIRECT_URL = 'accounts/login/'
LOGOUT_URL = '/logout/'

ACCOUNT_ACTIVATION_DAYS = 7
